#!/usr/bin/env python3
"""
Railway deployment runner –¥–ª—è Instagram Ukrainian News Bot
"""

import os
import sys
import time
import logging
from datetime import datetime

# –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –ª–æ–≥—É–≤–∞–Ω–Ω—è –¥–ª—è Railway
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(levelname)s - %(message)s',
    handlers=[
        logging.StreamHandler(sys.stdout)  # –õ–æ–≥–∏ –≤ –∫–æ–Ω—Å–æ–ª—å –¥–ª—è Railway
    ]
)

def check_environment():
    """–ü–µ—Ä–µ–≤—ñ—Ä—è—î –Ω–∞—è–≤–Ω—ñ—Å—Ç—å –∑–º—ñ–Ω–Ω–∏—Ö —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞"""
    # –°–ø–æ—á–∞—Ç–∫—É –ø–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –∑–≤–∏—á–∞–π–Ω—ñ –∑–º—ñ–Ω–Ω—ñ
    required_vars = {
        'INSTAGRAM_USERNAME': 'globalno2025',  # –£–í–ê–ì–ê: –¶–µ–π –∞–∫–∫–∞—É–Ω—Ç –Ω–µ —ñ—Å–Ω—É—î! 
        'INSTAGRAM_PASSWORD': 'Dimka2015780',
        'TELEGRAM_CHANNEL_LINK': 'https://t.me/newstime20'
    }
    
    # –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ –∑–º—ñ–Ω–Ω—ñ —è–∫—â–æ —ó—Ö –Ω–µ–º–∞—î
    for var, default_value in required_vars.items():
        if not os.getenv(var):
            os.environ[var] = default_value
            logging.info(f"üîß –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –∑–º—ñ–Ω–Ω—É {var}")
    
    # –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ –ø–æ—Ä–æ–∂–Ω—ñ–π OPENAI_API_KEY —è–∫—â–æ –π–æ–≥–æ –Ω–µ–º–∞—î
    if not os.getenv('OPENAI_API_KEY'):
        os.environ['OPENAI_API_KEY'] = ''
        logging.info("üîß –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –ø–æ—Ä–æ–∂–Ω—é –∑–º—ñ–Ω–Ω—É OPENAI_API_KEY (–≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –ª–æ–∫–∞–ª—å–Ω–∏–π –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä)")
    
    # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —â–µ —Ä–∞–∑
    missing_vars = []
    for var in required_vars.keys():
        if not os.getenv(var):
            missing_vars.append(var)
    
    if missing_vars:
        logging.error(f"–í—ñ–¥—Å—É—Ç–Ω—ñ –∑–º—ñ–Ω–Ω—ñ —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞: {missing_vars}")
        return False
    
    logging.info("‚úÖ –í—Å—ñ –∑–º—ñ–Ω–Ω—ñ —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞ –Ω–∞–ª–∞—à—Ç–æ–≤–∞–Ω–æ!")
    logging.info(f"Instagram: {os.getenv('INSTAGRAM_USERNAME')}")
    logging.info(f"Telegram: {os.getenv('TELEGRAM_CHANNEL_LINK')}")
    return True

def main():
    """–ì–æ–ª–æ–≤–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è –¥–ª—è Railway"""
    logging.info("üöÄ –ó–∞–ø—É—Å–∫ Instagram Ukrainian News Bot –Ω–∞ Railway")
    logging.info("=" * 60)
    
    # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —Å–µ—Ä–µ–¥–æ–≤–∏—â–µ
    if not check_environment():
        sys.exit(1)
    
    # –Ü–º–ø–æ—Ä—Ç—É—î–º–æ —Ç–∞ –∑–∞–ø—É—Å–∫–∞—î–º–æ –±–æ—Ç–∞
    try:
        # –°–ø—Ä–æ–±—É—î–º–æ –≤–∏–ø—Ä–∞–≤–∏—Ç–∏ –ø—Ä–æ–±–ª–µ–º—É –∑ lxml
        try:
            import lxml_html_clean
            logging.info("‚úÖ lxml_html_clean –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ")
        except ImportError:
            logging.warning("‚ö†Ô∏è lxml_html_clean –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ, –∞–ª–µ —Ü–µ –Ω–µ –∫—Ä–∏—Ç–∏—á–Ω–æ")
        
        from simple_bot import SimpleInstagramBot
        
        bot = SimpleInstagramBot()
        
        # –°–ø–æ—á–∞—Ç–∫—É —Ç–µ—Å—Ç
        logging.info("üß™ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ñ–≤...")
        if not bot.test_run():
            logging.error("‚ùå –¢–µ—Å—Ç–∏ –Ω–µ –ø—Ä–æ–π–¥–µ–Ω–æ")
            sys.exit(1)
        
        # –ó–∞–ø—É—Å–∫–∞—î–º–æ –ø–æ—Å—Ç—ñ–π–Ω–∏–π —Ä–µ–∂–∏–º
        logging.info("‚úÖ –¢–µ—Å—Ç–∏ –ø—Ä–æ–π–¥–µ–Ω–æ, –∑–∞–ø—É—Å–∫–∞—é –ø–æ—Å—Ç—ñ–π–Ω–∏–π —Ä–µ–∂–∏–º...")
        
        import schedule
        import random
        
        def post_job():
            logging.info(f"üìù {datetime.now().strftime('%H:%M:%S')} - –°—Ç–≤–æ—Ä—é—é –Ω–æ–≤–∏–π –ø–æ—Å—Ç...")
            success = bot.create_and_publish_post()
            
            if success:
                logging.info("‚úÖ –ü–æ—Å—Ç —É—Å–ø—ñ—à–Ω–æ –æ–ø—É–±–ª—ñ–∫–æ–≤–∞–Ω–æ!")
            else:
                logging.error("‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—É–±–ª—ñ–∫–∞—Ü—ñ—ó")
            
            # –ü–ª–∞–Ω—É—î–º–æ –Ω–∞—Å—Ç—É–ø–Ω–∏–π –ø–æ—Å—Ç
            next_hours = random.choice([2, 3])
            next_time = datetime.now().hour + next_hours
            if next_time >= 24:
                next_time -= 24
            
            logging.info(f"‚è∞ –ù–∞—Å—Ç—É–ø–Ω–∞ –ø—É–±–ª—ñ–∫–∞—Ü—ñ—è –æ {next_time:02d}:00")
        
        # –ü–µ—Ä—à–∞ –ø—É–±–ª—ñ–∫–∞—Ü—ñ—è —á–µ—Ä–µ–∑ 5 —Ö–≤–∏–ª–∏–Ω
        schedule.every(5).minutes.do(post_job)
        
        logging.info("ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω–æ –Ω–∞ Railway!")
        logging.info("‚è∞ –ü–µ—Ä—à–∞ –ø—É–±–ª—ñ–∫–∞—Ü—ñ—è —á–µ—Ä–µ–∑ 5 —Ö–≤–∏–ª–∏–Ω...")
        
        # –û—Å–Ω–æ–≤–Ω–∏–π —Ü–∏–∫–ª
        while True:
            schedule.run_pending()
            time.sleep(60)
            
    except KeyboardInterrupt:
        logging.info("üëã –û—Ç—Ä–∏–º–∞–Ω–æ —Å–∏–≥–Ω–∞–ª –∑—É–ø–∏–Ω–∫–∏...")
        sys.exit(0)
    except Exception as e:
        logging.error(f"‚ùå –ö—Ä–∏—Ç–∏—á–Ω–∞ –ø–æ–º–∏–ª–∫–∞: {e}")
        sys.exit(1)

if __name__ == "__main__":
    main()
