"""
–ü—É–±–ª—ñ–∫–∞—Ç–æ—Ä —É Instagram –Ω–∞ –±–∞–∑—ñ instagrapi.

–ö–ª—é—á–æ–≤—ñ –º–æ–∂–ª–∏–≤–æ—Å—Ç—ñ:
- login: –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—è –∑ –∫–µ—à–µ–º —Å–µ—Å—ñ—ó.
- publish_photo_post: –ø—É–±–ª—ñ–∫–∞—Ü—ñ—è —Ñ–æ—Ç–æ —É —Å—Ç—Ä—ñ—á–∫—É.
- publish_story: –ø—É–±–ª—ñ–∫–∞—Ü—ñ—è —ñ—Å—Ç–æ—Ä—ñ–π.
- get_account_info / get_post_insights: –¥–æ–ø–æ–º—ñ–∂–Ω—ñ –º–µ—Ç–æ–¥–∏ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó/–∞–Ω–∞–ª—ñ—Ç–∏–∫–∏.
- schedule_optimal_time: –ø—Ä–æ—Å—Ç–∞ –µ–≤—Ä–∏—Å—Ç–∏–∫–∞ ¬´–≥–∞—Ä–Ω–æ–≥–æ —á–∞—Å—É¬ª –¥–ª—è –ø–æ—Å—Ç—É.
- add_hashtags_to_comment: –¥–æ–¥–∞—î —Ö–µ—à—Ç–µ–≥–∏ –æ–∫—Ä–µ–º–∏–º –∫–æ–º–µ–Ω—Ç–∞—Ä–µ–º.
- safe_publish: –æ–±–≥–æ—Ä—Ç–∞—á –ø—É–±–ª—ñ–∫–∞—Ü—ñ—ó –∑ —Ä–æ–∑–¥—ñ–ª–µ–Ω–Ω—è–º –ø—ñ–¥–ø–∏—Å—É/—Ö–µ—à—Ç–µ–≥—ñ–≤ —Ç–∞ —Ç–∞–π–º—ñ–Ω–≥–æ–º.
- logout: –≤–∏—Ö—ñ–¥ —ñ–∑ –∞–∫–∞—É–Ω—Ç–∞.
"""

from instagrapi import Client
from instagrapi.exceptions import LoginRequired, ChallengeRequired, PleaseWaitFewMinutes
import os
import time
import random
from datetime import datetime
from config import INSTAGRAM_USERNAME, INSTAGRAM_PASSWORD

class InstagramPublisher:
    def __init__(self):
        """–°—Ç–≤–æ—Ä—é—î –∫–ª—ñ—î–Ω—Ç instagrapi —Ç–∞ –≥–æ—Ç—É—î –ø–æ–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó/—Å—Ç–∞–Ω—É."""
        self.client = Client()
        self.username = INSTAGRAM_USERNAME
        self.password = INSTAGRAM_PASSWORD
        self.is_logged_in = False
        
        # –°–ø—Ä–æ–±–∞ –ø–æ–ø–µ—Ä–µ–¥–Ω—å–æ –ø—ñ–¥–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ —Å–µ—Å—ñ—é (—è–∫—â–æ —î)
        try:
            if os.path.exists("instagram_session.json"):
                self.client.load_settings("instagram_session.json")
        except Exception:
            pass
        
    def login(self):
        """–í–∏–∫–æ–Ω—É—î –≤—Ö—ñ–¥ —É Instagram; –∑–∞ –º–æ–∂–ª–∏–≤–æ—Å—Ç—ñ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î –∑–±–µ—Ä–µ–∂–µ–Ω—É —Å–µ—Å—ñ—é."""
        try:
            print("–í—Ö—ñ–¥ –≤ Instagram...")
            
            # 1) –°–ø—Ä–æ–±–∞ —á–µ—Ä–µ–∑ –∑–±–µ—Ä–µ–∂–µ–Ω—ñ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è/—Å–µ—Å—ñ—é
            if os.path.exists("instagram_session.json"):
                try:
                    self.client.load_settings("instagram_session.json")
                    self.client.login(self.username, self.password)
                    self.is_logged_in = True
                    print("‚úÖ –í—Ö—ñ–¥ —á–µ—Ä–µ–∑ –∑–±–µ—Ä–µ–∂–µ–Ω—É —Å–µ—Å—ñ—é!")
                    # –û–Ω–æ–≤–∏–º–æ —Å–µ—Å—ñ—é
                    self.client.dump_settings("instagram_session.json")
                    return True
                except Exception:
                    print("‚ö†Ô∏è –ó–±–µ—Ä–µ–∂–µ–Ω–∞ —Å–µ—Å—ñ—è –Ω–µ–∞–∫—Ç—É–∞–ª—å–Ω–∞, –ø—Ä–æ–±—É—é –∑–≤–∏—á–∞–π–Ω–∏–π –≤—Ö—ñ–¥...")
            
            # 2) –ó–≤–∏—á–∞–π–Ω–∏–π –≤—Ö—ñ–¥
            self.client.login(self.username, self.password)
            self.is_logged_in = True
            print("‚úÖ –£—Å–ø—ñ—à–Ω–∏–π –≤—Ö—ñ–¥ –≤ Instagram!")
            
            # –ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è —Å–µ—Å—ñ—ó –¥–ª—è –ø–æ–¥–∞–ª—å—à–æ–≥–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è
            self.client.dump_settings("instagram_session.json")
            
            return True
            
        except Exception as e:
            error_msg = str(e)
            print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –≤—Ö–æ–¥—É –≤ Instagram: {error_msg}")
            
            # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ —Ü–µ challenge
            if "ChallengeResolve" in error_msg or "show_selfie_captcha" in error_msg:
                print("\n‚ö†Ô∏è Instagram –≤–∏–º–∞–≥–∞—î –¥–æ–¥–∞—Ç–∫–æ–≤—É –≤–µ—Ä–∏—Ñ—ñ–∫–∞—Ü—ñ—é (Challenge)")
                print("üí° –†—ñ—à–µ–Ω–Ω—è:")
                print("1. –£–≤—ñ–π–¥—ñ—Ç—å –≤ –∞–∫–∫–∞—É–Ω—Ç –≤—Ä—É—á–Ω—É —á–µ—Ä–µ–∑ –±—Ä–∞—É–∑–µ—Ä –∞–±–æ –º–æ–±—ñ–ª—å–Ω–∏–π –¥–æ–¥–∞—Ç–æ–∫")
                print("2. –ü—Ä–æ–π–¥—ñ—Ç—å –≤–µ—Ä–∏—Ñ—ñ–∫–∞—Ü—ñ—é (email/SMS/—Å–µ–ª—Ñ—ñ)")
                print("3. –ü–æ—á–µ–∫–∞–π—Ç–µ 24-48 –≥–æ–¥–∏–Ω–∏ —ñ —Å–ø—Ä–æ–±—É–π—Ç–µ –∑–Ω–æ–≤—É")
                print("4. –ê–±–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–π—Ç–µ —ñ–Ω—à–∏–π –∞–∫–∫–∞—É–Ω—Ç")
                print("5. –ü–µ—Ä–µ–∫–æ–Ω–∞–π—Ç–µ—Å—è —â–æ –∞–∫–∫–∞—É–Ω—Ç –Ω–µ –Ω–æ–≤–∏–π —ñ –º–∞—î –∞–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å\n")
                
            return False
    
    def ensure_logged_in(self):
        """–ü–µ—Ä–µ–≤—ñ—Ä—è—î –≤–∞–ª—ñ–¥–Ω—ñ—Å—Ç—å —Å–µ—Å—ñ—ó —ñ –≤–∏–∫–æ–Ω—É—î –ø–æ–≤—Ç–æ—Ä–Ω–∏–π –≤—Ö—ñ–¥ –∑–∞ –ø–æ—Ç—Ä–µ–±–∏."""
        try:
            if not self.is_logged_in:
                return self.login()
            # –®–≤–∏–¥–∫–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Å–µ—Å—ñ—ó –≤–∏–∫–ª–∏–∫–æ–º API
            _ = self.client.account_info()
            return True
        except LoginRequired:
            print("‚ö†Ô∏è –°–µ—Å—ñ—è –Ω–µ–¥—ñ–π—Å–Ω–∞: –ø–æ—Ç—Ä—ñ–±–µ–Ω –ø–æ–≤—Ç–æ—Ä–Ω–∏–π –≤—Ö—ñ–¥")
            self.is_logged_in = False
            return self.login()
        except Exception:
            # –ù–∞ –±—É–¥—å-—è–∫—É —ñ–Ω—à—É –ø–æ–º–∏–ª–∫—É ‚Äî –ø—Ä–æ–±—É—î–º–æ –ø–µ—Ä–µ–≤–≤—ñ–π—Ç–∏—Å—å
            self.is_logged_in = False
            return self.login()

    def publish_photo_post(self, image_path, caption, location=None):
        """–ü—É–±–ª—ñ–∫—É—î —Ñ–æ—Ç–æ —É —Å—Ç—Ä—ñ—á–∫—É –∑ –ø—ñ–¥–ø–∏—Å–æ–º; –ø–æ–≤–µ—Ä—Ç–∞—î (success, message)."""
        if not self.ensure_logged_in():
            return False, "–ù–µ–º–æ–∂–ª–∏–≤–æ —É–≤—ñ–π—Ç–∏ –≤ Instagram"
        
        try:
            print("üì§ –ü—É–±–ª—ñ–∫—É—é –ø–æ—Å—Ç –≤ Instagram...")
            
            # –î–æ–¥–∞—î–º–æ —Ä–∞–Ω–¥–æ–º–Ω—É –∑–∞—Ç—Ä–∏–º–∫—É –¥–ª—è –ø—Ä–∏—Ä–æ–¥–Ω–æ—Å—Ç—ñ
            time.sleep(random.uniform(30, 60))
            
            # –ü—É–±–ª—ñ–∫—É—î–º–æ —Ñ–æ—Ç–æ
            media = self.client.photo_upload(
                image_path, 
                caption,
                location=location
            )
            
            print(f"‚úÖ –ü–æ—Å—Ç —É—Å–ø—ñ—à–Ω–æ –æ–ø—É–±–ª—ñ–∫–æ–≤–∞–Ω–æ! ID: {media.id}")
            
            # –í–∏–¥–∞–ª—è—î–º–æ —Ç–∏–º—á–∞—Å–æ–≤–∏–π —Ñ–∞–π–ª
            try:
                os.remove(image_path)
                print("üóëÔ∏è –¢–∏–º—á–∞—Å–æ–≤–∏–π —Ñ–∞–π–ª –≤–∏–¥–∞–ª–µ–Ω–æ")
            except:
                pass
            
            return True, f"–ü–æ—Å—Ç –æ–ø—É–±–ª—ñ–∫–æ–≤–∞–Ω–æ: {media.id}"
            
        except (LoginRequired, ChallengeRequired) as e:
            # –°–ø—Ä–æ–±–∞ –≤—ñ–¥–Ω–æ–≤–ª–µ–Ω–Ω—è —Å–µ—Å—ñ—ó —Ç–∞ –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –∞–ø–ª–æ–∞–¥—É –æ–¥–∏–Ω —Ä–∞–∑
            print(f"‚ö†Ô∏è –°–µ—Å—ñ—è –≤—Ç—Ä–∞—á–µ–Ω–∞/–ø–æ—Ç—Ä—ñ–±–µ–Ω —á–µ–ª–µ–Ω–¥–∂: {e}. –ü–µ—Ä–µ–≤—Ö—ñ–¥ —Ç–∞ –ø–æ–≤—Ç–æ—Ä...")
            self.is_logged_in = False
            if self.ensure_logged_in():
                try:
                    time.sleep(random.uniform(5, 10))
                    media = self.client.photo_upload(image_path, caption, location=location)
                    print(f"‚úÖ –ü–æ—Å—Ç —É—Å–ø—ñ—à–Ω–æ –æ–ø—É–±–ª—ñ–∫–æ–≤–∞–Ω–æ –ø—ñ—Å–ª—è –ø–µ—Ä–µ–≤—Ö–æ–¥—É! ID: {media.id}")
                    try:
                        os.remove(image_path)
                        print("üóëÔ∏è –¢–∏–º—á–∞—Å–æ–≤–∏–π —Ñ–∞–π–ª –≤–∏–¥–∞–ª–µ–Ω–æ")
                    except:
                        pass
                    return True, f"–ü–æ—Å—Ç –æ–ø—É–±–ª—ñ–∫–æ–≤–∞–Ω–æ: {media.id}"
                except Exception as e2:
                    print(f"‚ùå –ü–æ–≤—Ç–æ—Ä–Ω–∞ –ø–æ–º–∏–ª–∫–∞ –ø—É–±–ª—ñ–∫–∞—Ü—ñ—ó: {e2}")
                    return False, f"–ü–æ–º–∏–ª–∫–∞: {e2}"
            return False, "login_required"
        except PleaseWaitFewMinutes as e:
            print(f"‚è≥ Instagram –ø—Ä–æ—Å–∏—Ç—å –∑–∞—á–µ–∫–∞—Ç–∏: {e}")
            return False, "please_wait_few_minutes"
        except Exception as e:
            print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—É–±–ª—ñ–∫–∞—Ü—ñ—ó: {e}")
            return False, f"–ü–æ–º–∏–ª–∫–∞: {e}"
    
    def publish_story(self, image_path, text_overlay=None):
        """–ü—É–±–ª—ñ–∫—É—î —ñ—Å—Ç–æ—Ä—ñ—é –∑ –æ–ø—Ü—ñ–æ–Ω–∞–ª—å–Ω–∏–º —Ç–µ–∫—Å—Ç–æ–º; –ø–æ–≤–µ—Ä—Ç–∞—î (success, message)."""
        if not self.is_logged_in:
            if not self.login():
                return False, "–ù–µ–º–æ–∂–ª–∏–≤–æ —É–≤—ñ–π—Ç–∏ –≤ Instagram"
        
        try:
            print("üì§ –ü—É–±–ª—ñ–∫—É—é Stories...")
            
            # –ü—É–±–ª—ñ–∫—É—î–º–æ Stories
            story = self.client.photo_upload_to_story(
                image_path,
                caption=text_overlay
            )
            
            print(f"‚úÖ Stories –æ–ø—É–±–ª—ñ–∫–æ–≤–∞–Ω–æ! ID: {story.id}")
            
            # –í–∏–¥–∞–ª—è—î–º–æ —Ç–∏–º—á–∞—Å–æ–≤–∏–π —Ñ–∞–π–ª
            try:
                os.remove(image_path)
            except:
                pass
            
            return True, f"Stories –æ–ø—É–±–ª—ñ–∫–æ–≤–∞–Ω–æ: {story.id}"
            
        except Exception as e:
            print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—É–±–ª—ñ–∫–∞—Ü—ñ—ó Stories: {e}")
            return False, f"–ü–æ–º–∏–ª–∫–∞: {e}"
    
    def get_account_info(self):
        """–ü–æ–≤–µ—Ä—Ç–∞—î –±–∞–∑–æ–≤—É —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –∞–∫–∞—É–Ω—Ç (username/followers/...); –∞–±–æ None –ø—Ä–∏ –ø–æ–º–∏–ª—Ü—ñ."""
        if not self.is_logged_in:
            if not self.login():
                return None
        
        try:
            user_info = self.client.account_info()
            return {
                'username': user_info.username,
                'followers': user_info.follower_count,
                'following': user_info.following_count,
                'posts': user_info.media_count,
                'is_verified': user_info.is_verified,
                'is_business': user_info.is_business
            }
        except Exception as e:
            print(f"–ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó –ø—Ä–æ –∞–∫–∫–∞—É–Ω—Ç: {e}")
            return None
    
    def get_post_insights(self, media_id):
        """–ü–æ–≤–µ—Ä—Ç–∞—î —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ—Å—Ç–∞ (–¥–ª—è –±—ñ–∑–Ω–µ—Å-–∞–∫–∞—É–Ω—Ç—ñ–≤) –∞–±–æ None –ø—Ä–∏ –ø–æ–º–∏–ª—Ü—ñ."""
        try:
            insights = self.client.insights_media_v1(media_id)
            return insights
        except Exception as e:
            print(f"–ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: {e}")
            return None
    
    def schedule_optimal_time(self):
        """–ü–æ–≤–µ—Ä—Ç–∞—î (is_optimal, message) –¥–ª—è –ø–æ—Ç–æ—á–Ω–æ—ó –≥–æ–¥–∏–Ω–∏ –∑–∞ –ø—Ä–æ—Å—Ç–æ—é –µ–≤—Ä–∏—Å—Ç–∏–∫–æ—é —Ç–∞–π–º—ñ–Ω–≥—É."""
        current_hour = datetime.now().hour
        
        # –û–ø—Ç–∏–º–∞–ª—å–Ω—ñ –≥–æ–¥–∏–Ω–∏ –¥–ª—è –ø—É–±–ª—ñ–∫–∞—Ü—ñ—ó –≤ Instagram (–∑–∞ —É–∫—Ä–∞—ó–Ω—Å—å–∫–∏–º —á–∞—Å–æ–º)
        optimal_hours = [8, 9, 12, 13, 17, 18, 19, 20, 21]
        
        if current_hour in optimal_hours:
            return True, "–ó–∞—Ä–∞–∑ –≥–∞—Ä–Ω–∏–π —á–∞—Å –¥–ª—è –ø—É–±–ª—ñ–∫–∞—Ü—ñ—ó"
        else:
            next_optimal = min(hour for hour in optimal_hours if hour > current_hour)
            return False, f"–ö—Ä–∞—â–µ –æ–ø—É–±–ª—ñ–∫—É–≤–∞—Ç–∏ –æ {next_optimal}:00"
    
    def add_hashtags_to_comment(self, media_id, hashtags):
        """–î–æ–¥–∞—î —Ö–µ—à—Ç–µ–≥–∏ —è–∫ –∫–æ–º–µ–Ω—Ç–∞—Ä –ø—ñ–¥ –ø–æ—Å—Ç–æ–º; –ø–æ–≤–µ—Ä—Ç–∞—î (success, comment_id|error)."""
        try:
            comment = self.client.media_comment(media_id, hashtags)
            print("‚úÖ –•–µ—à—Ç–µ–≥–∏ –¥–æ–¥–∞–Ω–æ —è–∫ –∫–æ–º–µ–Ω—Ç–∞—Ä")
            return True, comment.id
        except Exception as e:
            print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –¥–æ–¥–∞–≤–∞–Ω–Ω—è –∫–æ–º–µ–Ω—Ç–∞—Ä—è: {e}")
            return False, str(e)
    
    def safe_publish(self, image_path, caption, add_hashtags_as_comment=True):
        """–ü—É–±–ª—ñ–∫—É—î —Ñ–æ—Ç–æ –±–µ–∑–ø–µ—á–Ω–æ: –≤—ñ–¥–æ–∫—Ä–µ–º–ª—é—î —Ö–µ—à—Ç–µ–≥–∏, —á–µ–∫–∞—î ¬´–≥–∞—Ä–Ω–æ–≥–æ —á–∞—Å—É¬ª, –¥–æ–¥–∞—î —Ö–µ—à—Ç–µ–≥–∏ –∫–æ–º–µ–Ω—Ç–∞—Ä–µ–º."""
        try:
            # –ü–µ—Ä–µ–∫–æ–Ω—É—î–º–æ—Å—å, —â–æ —Å–µ—Å—ñ—è —Ä–æ–±–æ—á–∞ –ø–µ—Ä–µ–¥ –±—É–¥—å-—è–∫–∏–º–∏ –¥—ñ—è–º–∏
            if not self.ensure_logged_in():
                return False, "–ù–µ–º–æ–∂–ª–∏–≤–æ —É–≤—ñ–π—Ç–∏ –≤ Instagram"
            
            # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∞—Å
            is_optimal, time_message = self.schedule_optimal_time()
            print(f"‚è∞ {time_message}")
            
            # –†–æ–∑–¥—ñ–ª—è—î–º–æ –∫–æ–Ω—Ç–µ–Ω—Ç —Ç–∞ —Ö–µ—à—Ç–µ–≥–∏
            if add_hashtags_as_comment and '\n#' in caption:
                parts = caption.split('\n#')
                main_caption = parts[0]
                hashtags = '#' + '\n#'.join(parts[1:])
            else:
                main_caption = caption
                hashtags = ""
            
            # –ü—É–±–ª—ñ–∫—É—î–º–æ –æ—Å–Ω–æ–≤–Ω–∏–π –ø–æ—Å—Ç
            success, message = self.publish_photo_post(image_path, main_caption)
            
            if success and hashtags and add_hashtags_as_comment:
                # –í–∏—Ç—è–≥—É—î–º–æ ID –º–µ–¥—ñ–∞ –∑ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
                media_id = message.split(": ")[-1]
                # –î–æ–¥–∞—î–º–æ —Ö–µ—à—Ç–µ–≥–∏ —è–∫ –∫–æ–º–µ–Ω—Ç–∞—Ä —á–µ—Ä–µ–∑ –∫—ñ–ª—å–∫–∞ —Å–µ–∫—É–Ω–¥
                time.sleep(random.uniform(10, 30))
                self.add_hashtags_to_comment(media_id, hashtags)
            
            return success, message
            
        except Exception as e:
            return False, f"–ü–æ–º–∏–ª–∫–∞ –±–µ–∑–ø–µ—á–Ω–æ—ó –ø—É–±–ª—ñ–∫–∞—Ü—ñ—ó: {e}"
    
    def logout(self):
        """–ó–∞–≤–µ—Ä—à—É—î —Å–µ—Å—ñ—é instagrapi —Ç–∞ —Å–∫–∏–¥–∞—î –ø—Ä–∞–ø–æ—Ä–µ—Ü—å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó."""
        try:
            self.client.logout()
            self.is_logged_in = False
            print("üëã –í–∏—Ö—ñ–¥ –∑ Instagram")
        except:
            pass
