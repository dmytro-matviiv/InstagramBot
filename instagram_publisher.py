from instagrapi import Client
import os
import time
import random
from datetime import datetime
from config import INSTAGRAM_USERNAME, INSTAGRAM_PASSWORD

class InstagramPublisher:
    def __init__(self):
        self.client = Client()
        self.username = INSTAGRAM_USERNAME
        self.password = INSTAGRAM_PASSWORD
        self.is_logged_in = False
        
    def login(self):
        """–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—è –≤ Instagram"""
        try:
            print("–í—Ö—ñ–¥ –≤ Instagram...")
            
            # –°–ø—Ä–æ–±–∞ –≤—Ö–æ–¥—É
            self.client.login(self.username, self.password)
            self.is_logged_in = True
            print("‚úÖ –£—Å–ø—ñ—à–Ω–∏–π –≤—Ö—ñ–¥ –≤ Instagram!")
            
            # –ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è —Å–µ—Å—ñ—ó –¥–ª—è –ø–æ–¥–∞–ª—å—à–æ–≥–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è
            self.client.dump_settings("instagram_session.json")
            
            return True
            
        except Exception as e:
            error_msg = str(e)
            print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –≤—Ö–æ–¥—É –≤ Instagram: {error_msg}")
            
            # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ —Ü–µ challenge
            if "ChallengeResolve" in error_msg or "show_selfie_captcha" in error_msg:
                print("\n‚ö†Ô∏è Instagram –≤–∏–º–∞–≥–∞—î –¥–æ–¥–∞—Ç–∫–æ–≤—É –≤–µ—Ä–∏—Ñ—ñ–∫–∞—Ü—ñ—é (Challenge)")
                print("üí° –†—ñ—à–µ–Ω–Ω—è:")
                print("1. –£–≤—ñ–π–¥—ñ—Ç—å –≤ –∞–∫–∫–∞—É–Ω—Ç –≤—Ä—É—á–Ω—É —á–µ—Ä–µ–∑ –±—Ä–∞—É–∑–µ—Ä –∞–±–æ –º–æ–±—ñ–ª—å–Ω–∏–π –¥–æ–¥–∞—Ç–æ–∫")
                print("2. –ü—Ä–æ–π–¥—ñ—Ç—å –≤–µ—Ä–∏—Ñ—ñ–∫–∞—Ü—ñ—é (email/SMS/—Å–µ–ª—Ñ—ñ)")
                print("3. –ü–æ—á–µ–∫–∞–π—Ç–µ 24-48 –≥–æ–¥–∏–Ω–∏ —ñ —Å–ø—Ä–æ–±—É–π—Ç–µ –∑–Ω–æ–≤—É")
                print("4. –ê–±–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–π—Ç–µ —ñ–Ω—à–∏–π –∞–∫–∫–∞—É–Ω—Ç")
                print("5. –ü–µ—Ä–µ–∫–æ–Ω–∞–π—Ç–µ—Å—è —â–æ –∞–∫–∫–∞—É–Ω—Ç –Ω–µ –Ω–æ–≤–∏–π —ñ –º–∞—î –∞–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å\n")
                
            # –°–ø—Ä–æ–±–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –∑–±–µ—Ä–µ–∂–µ–Ω—É —Å–µ—Å—ñ—é
            elif os.path.exists("instagram_session.json"):
                try:
                    print("üîÑ –°–ø—Ä–æ–±–∞ –≤—Ö–æ–¥—É —á–µ—Ä–µ–∑ –∑–±–µ—Ä–µ–∂–µ–Ω—É —Å–µ—Å—ñ—é...")
                    self.client.load_settings("instagram_session.json")
                    self.client.login(self.username, self.password)
                    self.is_logged_in = True
                    print("‚úÖ –í—Ö—ñ–¥ —á–µ—Ä–µ–∑ –∑–±–µ—Ä–µ–∂–µ–Ω—É —Å–µ—Å—ñ—é!")
                    return True
                except:
                    print("‚ùå –ó–±–µ—Ä–µ–∂–µ–Ω–∞ —Å–µ—Å—ñ—è –Ω–µ –ø—Ä–∞—Ü—é—î")
            
            return False
    
    def publish_photo_post(self, image_path, caption, location=None):
        """–ü—É–±–ª—ñ–∫—É—î —Ñ–æ—Ç–æ –ø–æ—Å—Ç –≤ Instagram"""
        if not self.is_logged_in:
            if not self.login():
                return False, "–ù–µ–º–æ–∂–ª–∏–≤–æ —É–≤—ñ–π—Ç–∏ –≤ Instagram"
        
        try:
            print("üì§ –ü—É–±–ª—ñ–∫—É—é –ø–æ—Å—Ç –≤ Instagram...")
            
            # –î–æ–¥–∞—î–º–æ —Ä–∞–Ω–¥–æ–º–Ω—É –∑–∞—Ç—Ä–∏–º–∫—É –¥–ª—è –ø—Ä–∏—Ä–æ–¥–Ω–æ—Å—Ç—ñ
            time.sleep(random.uniform(30, 60))
            
            # –ü—É–±–ª—ñ–∫—É—î–º–æ —Ñ–æ—Ç–æ
            media = self.client.photo_upload(
                image_path, 
                caption,
                location=location
            )
            
            print(f"‚úÖ –ü–æ—Å—Ç —É—Å–ø—ñ—à–Ω–æ –æ–ø—É–±–ª—ñ–∫–æ–≤–∞–Ω–æ! ID: {media.id}")
            
            # –í–∏–¥–∞–ª—è—î–º–æ —Ç–∏–º—á–∞—Å–æ–≤–∏–π —Ñ–∞–π–ª
            try:
                os.remove(image_path)
                print("üóëÔ∏è –¢–∏–º—á–∞—Å–æ–≤–∏–π —Ñ–∞–π–ª –≤–∏–¥–∞–ª–µ–Ω–æ")
            except:
                pass
            
            return True, f"–ü–æ—Å—Ç –æ–ø—É–±–ª—ñ–∫–æ–≤–∞–Ω–æ: {media.id}"
            
        except Exception as e:
            print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—É–±–ª—ñ–∫–∞—Ü—ñ—ó: {e}")
            return False, f"–ü–æ–º–∏–ª–∫–∞: {e}"
    
    def publish_story(self, image_path, text_overlay=None):
        """–ü—É–±–ª—ñ–∫—É—î Stories –≤ Instagram"""
        if not self.is_logged_in:
            if not self.login():
                return False, "–ù–µ–º–æ–∂–ª–∏–≤–æ —É–≤—ñ–π—Ç–∏ –≤ Instagram"
        
        try:
            print("üì§ –ü—É–±–ª—ñ–∫—É—é Stories...")
            
            # –ü—É–±–ª—ñ–∫—É—î–º–æ Stories
            story = self.client.photo_upload_to_story(
                image_path,
                caption=text_overlay
            )
            
            print(f"‚úÖ Stories –æ–ø—É–±–ª—ñ–∫–æ–≤–∞–Ω–æ! ID: {story.id}")
            
            # –í–∏–¥–∞–ª—è—î–º–æ —Ç–∏–º—á–∞—Å–æ–≤–∏–π —Ñ–∞–π–ª
            try:
                os.remove(image_path)
            except:
                pass
            
            return True, f"Stories –æ–ø—É–±–ª—ñ–∫–æ–≤–∞–Ω–æ: {story.id}"
            
        except Exception as e:
            print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—É–±–ª—ñ–∫–∞—Ü—ñ—ó Stories: {e}")
            return False, f"–ü–æ–º–∏–ª–∫–∞: {e}"
    
    def get_account_info(self):
        """–û—Ç—Ä–∏–º—É—î —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –∞–∫–∫–∞—É–Ω—Ç"""
        if not self.is_logged_in:
            if not self.login():
                return None
        
        try:
            user_info = self.client.account_info()
            return {
                'username': user_info.username,
                'followers': user_info.follower_count,
                'following': user_info.following_count,
                'posts': user_info.media_count,
                'is_verified': user_info.is_verified,
                'is_business': user_info.is_business
            }
        except Exception as e:
            print(f"–ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó –ø—Ä–æ –∞–∫–∫–∞—É–Ω—Ç: {e}")
            return None
    
    def get_post_insights(self, media_id):
        """–û—Ç—Ä–∏–º—É—î —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ—Å—Ç–∞ (–¥–ª—è –±—ñ–∑–Ω–µ—Å –∞–∫–∫–∞—É–Ω—Ç—ñ–≤)"""
        try:
            insights = self.client.insights_media_v1(media_id)
            return insights
        except Exception as e:
            print(f"–ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: {e}")
            return None
    
    def schedule_optimal_time(self):
        """–í–∏–∑–Ω–∞—á–∞—î –æ–ø—Ç–∏–º–∞–ª—å–Ω–∏–π —á–∞—Å –¥–ª—è –ø—É–±–ª—ñ–∫–∞—Ü—ñ—ó"""
        current_hour = datetime.now().hour
        
        # –û–ø—Ç–∏–º–∞–ª—å–Ω—ñ –≥–æ–¥–∏–Ω–∏ –¥–ª—è –ø—É–±–ª—ñ–∫–∞—Ü—ñ—ó –≤ Instagram (–∑–∞ —É–∫—Ä–∞—ó–Ω—Å—å–∫–∏–º —á–∞—Å–æ–º)
        optimal_hours = [8, 9, 12, 13, 17, 18, 19, 20, 21]
        
        if current_hour in optimal_hours:
            return True, "–ó–∞—Ä–∞–∑ –≥–∞—Ä–Ω–∏–π —á–∞—Å –¥–ª—è –ø—É–±–ª—ñ–∫–∞—Ü—ñ—ó"
        else:
            next_optimal = min(hour for hour in optimal_hours if hour > current_hour)
            return False, f"–ö—Ä–∞—â–µ –æ–ø—É–±–ª—ñ–∫—É–≤–∞—Ç–∏ –æ {next_optimal}:00"
    
    def add_hashtags_to_comment(self, media_id, hashtags):
        """–î–æ–¥–∞—î —Ö–µ—à—Ç–µ–≥–∏ —è–∫ –∫–æ–º–µ–Ω—Ç–∞—Ä (—â–æ–± –Ω–µ –∑–∞—Ö–∞—Ä–∞—â—É–≤–∞—Ç–∏ –æ—Å–Ω–æ–≤–Ω–∏–π —Ç–µ–∫—Å—Ç)"""
        try:
            comment = self.client.media_comment(media_id, hashtags)
            print("‚úÖ –•–µ—à—Ç–µ–≥–∏ –¥–æ–¥–∞–Ω–æ —è–∫ –∫–æ–º–µ–Ω—Ç–∞—Ä")
            return True, comment.id
        except Exception as e:
            print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –¥–æ–¥–∞–≤–∞–Ω–Ω—è –∫–æ–º–µ–Ω—Ç–∞—Ä—è: {e}")
            return False, str(e)
    
    def safe_publish(self, image_path, caption, add_hashtags_as_comment=True):
        """–ë–µ–∑–ø–µ—á–Ω–∞ –ø—É–±–ª—ñ–∫–∞—Ü—ñ—è –∑ –¥–æ–¥–∞—Ç–∫–æ–≤–∏–º–∏ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∞–º–∏"""
        try:
            # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∞—Å
            is_optimal, time_message = self.schedule_optimal_time()
            print(f"‚è∞ {time_message}")
            
            # –†–æ–∑–¥—ñ–ª—è—î–º–æ –∫–æ–Ω—Ç–µ–Ω—Ç —Ç–∞ —Ö–µ—à—Ç–µ–≥–∏
            if add_hashtags_as_comment and '\n#' in caption:
                parts = caption.split('\n#')
                main_caption = parts[0]
                hashtags = '#' + '\n#'.join(parts[1:])
            else:
                main_caption = caption
                hashtags = ""
            
            # –ü—É–±–ª—ñ–∫—É—î–º–æ –æ—Å–Ω–æ–≤–Ω–∏–π –ø–æ—Å—Ç
            success, message = self.publish_photo_post(image_path, main_caption)
            
            if success and hashtags and add_hashtags_as_comment:
                # –í–∏—Ç—è–≥—É—î–º–æ ID –º–µ–¥—ñ–∞ –∑ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
                media_id = message.split(": ")[-1]
                # –î–æ–¥–∞—î–º–æ —Ö–µ—à—Ç–µ–≥–∏ —è–∫ –∫–æ–º–µ–Ω—Ç–∞—Ä —á–µ—Ä–µ–∑ –∫—ñ–ª—å–∫–∞ —Å–µ–∫—É–Ω–¥
                time.sleep(random.uniform(10, 30))
                self.add_hashtags_to_comment(media_id, hashtags)
            
            return success, message
            
        except Exception as e:
            return False, f"–ü–æ–º–∏–ª–∫–∞ –±–µ–∑–ø–µ—á–Ω–æ—ó –ø—É–±–ª—ñ–∫–∞—Ü—ñ—ó: {e}"
    
    def logout(self):
        """–í–∏—Ö—ñ–¥ –∑ –∞–∫–∫–∞—É–Ω—Ç—É"""
        try:
            self.client.logout()
            self.is_logged_in = False
            print("üëã –í–∏—Ö—ñ–¥ –∑ Instagram")
        except:
            pass
